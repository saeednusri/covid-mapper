buildPack: docker
pipelineConfig:
  agent:
    container: maven
    label: jenkins-maven
  extends:
    file: pipeline.yaml
    import: classic
  pipelines:
    pullRequest:
      pipeline:
        options:
          containerOptions:
            env:
              - name: DOCKER_CONFIG
                value: /home/jenkins/.docker/
              - name: DOCKER_REGISTRY
                valueFrom:
                  configMapKeyRef:
                    key: docker.registry
                    name: jenkins-x-docker-registry
              - name: GIT_AUTHOR_EMAIL
                value: jenkins-x@googlegroups.com
              - name: GIT_AUTHOR_NAME
                value: jenkins-x-bot
              - name: GIT_COMMITTER_EMAIL
                value: jenkins-x@googlegroups.com
              - name: GIT_COMMITTER_NAME
                value: jenkins-x-bot
              - name: JENKINS_URL
                value: http://jenkins:8080
              - name: XDG_CONFIG_HOME
                value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /var/run/docker.sock
                name: docker-daemon
              - mountPath: /root/.m2/
                name: volume-0
              - mountPath: /home/jenkins/.docker
                name: volume-1
              - mountPath: /home/jenkins/.gnupg
                name: volume-2
        stages:
          - agent:
              image: maven
            name: from-build-pack
            steps:
              - command: skaffold version
                dir: /workspace/source
                image: maven
                name: build-skaffold-version
              - args:
                  - --cache=true
                  - --cache-dir=/workspace
                  - --context=/workspace/source
                  - --dockerfile=/workspace/source/Dockerfile
                  - --destination=gcr.io/leap-0123/covid-mapper:${inputs.params.version}
                  - --cache-repo=gcr.io/leap-0123/cache
                command: /kaniko/executor
                dir: /workspace/source
                image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
                name: build-container-build
              - command: jx step post build --image $DOCKER_REGISTRY/$ORG/$APP_NAME:$PREVIEW_VERSION
                dir: /workspace/source
                image: maven
                name: postbuild-post-build
              - command: make preview
                dir: /workspace/source/charts/preview
                image: maven
                name: promote-make-preview
              - command: jx preview --app $APP_NAME --dir ../..
                dir: /workspace/source/charts/preview
                image: maven
                name: promote-jx-preview
    release:
      pipeline:
        options:
          containerOptions:
            env:
              - name: DOCKER_CONFIG
                value: /home/jenkins/.docker/
              - name: DOCKER_REGISTRY
                valueFrom:
                  configMapKeyRef:
                    key: docker.registry
                    name: jenkins-x-docker-registry
              - name: GIT_AUTHOR_EMAIL
                value: jenkins-x@googlegroups.com
              - name: GIT_AUTHOR_NAME
                value: jenkins-x-bot
              - name: GIT_COMMITTER_EMAIL
                value: jenkins-x@googlegroups.com
              - name: GIT_COMMITTER_NAME
                value: jenkins-x-bot
              - name: JENKINS_URL
                value: http://jenkins:8080
              - name: XDG_CONFIG_HOME
                value: /home/jenkins
            name: ""
            resources:
              limits:
                cpu: "1"
                memory: 1Gi
              requests:
                cpu: 400m
                memory: 512Mi
            securityContext:
              privileged: true
            volumeMounts:
              - mountPath: /home/jenkins
                name: workspace-volume
              - mountPath: /var/run/docker.sock
                name: docker-daemon
              - mountPath: /root/.m2/
                name: volume-0
              - mountPath: /home/jenkins/.docker
                name: volume-1
              - mountPath: /home/jenkins/.gnupg
                name: volume-2
        stages:
          - agent:
              image: maven
            name: from-build-pack
            steps:
              - command: jx step git credentials
                dir: /workspace/source
                image: maven
                name: setup-jx-git-credentials
              - args:
                  - --cache=true
                  - --cache-dir=/workspace
                  - --context=/workspace/source
                  - --dockerfile=/workspace/source/Dockerfile
                  - --destination=gcr.io/leap-0123/covid-mapper:${inputs.params.version}
                  - --cache-repo=gcr.io/leap-0123/cache
                command: /kaniko/executor
                dir: /workspace/source
                image: gcr.io/kaniko-project/executor:9912ccbf8d22bbafbf971124600fbb0b13b9cbd6
                name: build-container-build
              - command: jx step changelog --version v${VERSION}
                dir: /workspace/source
                image: maven
                name: promote-changelog
              - command: jx step helm release
                dir: /workspace/source/charts/covid-mapper
                image: maven
                name: promote-helm-release
              - command: jx promote -b --all-auto --timeout 1h --version ${VERSION}
                dir: /workspace/source/charts/node-vcx-server
                image: maven
                name: promote-jx-promote
      setVersion:
        steps:
          - image: maven
            steps:
              - comment: so we can retrieve the version in later steps
                name: next-version
                sh: echo \$(jx-release-version) > VERSION
              - name: tag-version
                sh: jx step tag --version \$(cat VERSION)
